[ { "title": "Swift Crash 捕获和分析", "url": "/posts/swift-crash-catch/", "categories": "iOS", "tags": "Swift, Crash, Signal", "date": "2021-03-13 22:27:34 +0800", "snippet": "iOS中的异常要捕获Crash，我们先需要明确几个概念及其之间的关系：硬件异常、软件异常、mach异常、Signal信号，这四种异常概念，自底向上构建了iOS系统的异常处理模型。他们之间的关系如下图所示：iOS中的Crash主要分为Mach Exception、Sinal 和NSException，每一种都处在不同的系统层级上，也有各自不同的捕获方式。Mach ExceptionMach是一个XNU的微内核核心，Mach异常是指最底层的内核级异常，被定义在 &amp;lt;mach/exception_types.h&amp;gt;下 。Mach异常由CPU陷阱引发，在异常发生后会被异常..." }, { "title": "Xcode常见Warning解决", "url": "/posts/xcode-warning/", "categories": "iOS", "tags": "Xcode, Warning", "date": "2020-05-15 22:27:34 +0800", "snippet": "Analysis Warning（依赖分析⚠️）例：Warning: The Copy Bundle Resources build phase contains this target’s Info.plist file /Users/kylexsun/APP_NAME/Resources/project/Notification_Info.plist.Info.plist文件已经在Build Settings中的Info.plist File指定了路径，无需再添加到Build Phases中的Copy Bundle Resources中去Documentation Issue（文档问..." }, { "title": "Assign对象自动检测", "url": "/posts/assign-obj-detector/", "categories": "iOS", "tags": "assign, runtime", "date": "2020-03-29 22:27:34 +0800", "snippet": "背景在编码过程中，有时候会手误给对象类型的property设置assign修饰符，如果这个指针所指向的对象被系统释放，它不会被自动置nil而是变成野指针，产生crash的风险。因此我们就需要一个工具能够在开发阶段将这些误用的地方检测出来及时进行修复。原理在App运行的时候我们可以通过rumtime来读取每个property的attribute（例如T@&quot;NSString&quot;,N,V_descriptionText），通过attribute可以判断这个属性是否是对象、是否使用了assign修饰符。对于这些attribute的含义，可以在Apple官方文档 Declared..." }, { "title": "SDK开发和打包静态库遇到的坑", "url": "/posts/sdk-development/", "categories": "iOS", "tags": "SDK, CocoaPods Packager, 静态库", "date": "2019-03-13 22:27:34 +0800", "snippet": "我们在使用第三方库的时候一般有三种接入方式： 直接把第三方库的源码拖入工程 通过CocoaPods等包管理工具进行引入 通过.a或者.framework静态库引入前两种情况一般是用于引入开源的项目，比如AFNetworking、SDWebImage；第三种情况一般是用于引入一些不方便开源的SDK，比如微信支付的SDK、百度地图的SDK。SDK开发注意点如果我们要做一个静态库形式的SDK，有什么需要注意的呢？ 没有必要暴露的头文件就不要暴露给外部 类名、分类方法名、全局变量、全局函数、枚举、宏定义要加前缀 SDK中引入的第三方库和接入项目中引入的第三方库冲突问题这里的第三点是我..." }, { "title": "OpenGL学习笔记（三）：向量、矩阵和变换", "url": "/posts/opengl-transform/", "categories": "Graphic", "tags": "OpenGL, 向量, 矩阵, 变换", "date": "2019-03-07 19:38:21 +0800", "snippet": "OpenGL学习笔记（一）：在Mac上编译GLFW并配置到Xcode项目向量向量最基本的定义就是一个方向。或者更正式的说，向量有一个方向(Direction)和大小(Magnitude，也叫做强度或长度)。如果一个向量有2个维度，它表示一个平面的方向，当它有3个维度的时候它可以表达一个3D世界的方向。下面你会看到3个向量，每个向量在2D图像中都用一个箭头\\((x, y)\\)表示。我们在2D图片中展示这些向量，因为这样子会更直观一点。你可以把这些2D向量当做z坐标为0的3D向量。由于向量表示的是方向，起始于何处并不会改变它的值。下图我们可以看到向量\\(\\bar{v}\\)和\\(\\bar{w}..." }, { "title": "Mac上的各种代理设置", "url": "/posts/mac-proxy/", "categories": "Mac", "tags": "代理, Git, Cocoapods, SSH, 终端, NPM", "date": "2019-01-23 19:31:53 +0800", "snippet": "在天朝要做一名合格的程序员，翻墙上Google是必备技能。我之前有写过一篇文章来教大家搭建自己的翻墙服务器，里面关于VPS推荐的部分已经过时了，但是操作步骤还是有用的。但是等你把一切都配置好之后你会发现似乎只有浏览器可以正常访问被屏蔽的网站，常用的一些服务比如git、ssh、npm、terminal、telegram等不是连接出错就是慢的要死，其实这些服务的数据其实根本没有经过我们的代理服务器，所以还是和原来一样。这是为什么呢？当我们启动了Shadowsocks客户端的时候，就设置了几个系统级别的环境变量比如http_proxy，浏览器在发送http请求的时候就会去检测这个环境变量是否存..." }, { "title": "移动端H5页面选择图片的各种姿势", "url": "/posts/h5-image-picker/", "categories": "iOS", "tags": "H5, Hybrid, NSURLProtocol", "date": "2018-12-29 01:05:50 +0800", "snippet": "通过HTML的&amp;lt;input&amp;gt;标签调用系统api进行选择通过下面的代码就可以调用系统的api选择图片&amp;lt;!-- 选择文件 --&amp;gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&amp;lt;!-- 选择图片 --&amp;gt;&amp;lt;input type=&quot;file&quot; accept=&#39;image/*&#39;&amp;gt;&amp;lt;!-- 选择多张图片 --&amp;gt;&amp;lt;input type=&quot;file&quot; mult..." }, { "title": "删除macOS自带的英文输入法", "url": "/posts/remove-default-input-source/", "categories": "Mac", "tags": "输入法", "date": "2018-10-19 22:22:25 +0800", "snippet": "macOS自带的输入法支持的语言很多，但是词库不够丰富，所以我们一般都会安装搜狗输入法。搜狗输入法是支持中文和英文输入的，有时候我们处在英文状态，想要切换到中文。如果我们不查看状态栏的输入法状态的话很难判断当前是搜狗的英文输入法还是系统自带的英文输入法。这个时候我一般会直接尝试用快捷键进行切换。问题在于系统输入法切换的快捷键是Option + Space，而搜狗输入法中英文切换的快捷键是Shift，这样的话我们有一半的概率会需要这个快捷键都按才会切换到中文输入法。这样是很难受的。这种情况我们自然而然的就会想要在输入法管理器当中删掉系统自带的英文输入法。然而，系统并不允许我们这么做。其实细..." }, { "title": "OpenGL学习笔记（一）：在Mac上编译GLFW并配置到Xcode项目", "url": "/posts/mac-glfw/", "categories": "Graphic", "tags": "OpenGL, GLFW", "date": "2018-09-05 19:58:11 +0800", "snippet": "最近准备通过 LearnOpenGL 来学习一下OpenGL，环境配置的教程里面使用的开发工具是 Windows 上的 Visual Studio，而我想使用 Mac 上的 Xcode，在这里记录一下配置的过程。下载 GLFW 源代码并安装 CMake首先在GLFW的官网下载源代码 http://www.glfw.org/，然后在 CMake 官网下载 Mac 平台对应的安装包 https://cmake.org/download/我下载的是一个 dmg 格式的图形界面的安装包，在把 CMake.app 拖进 /Applications 文件夹之后没有办法直接在终端运行 cmake 命令..." }, { "title": "隐藏在4K电视中的猫腻", "url": "/posts/real-vs-fake-4k-tv/", "categories": "Life", "tags": "4K, 电视, HDR", "date": "2018-06-25 17:49:39 +0800", "snippet": "最近乔迁新居，媳妇又很喜欢看电视，因此准备买一台电视。某东上看了一圈之后发现现在的大屏电视基本上都支持4K分辨率。这让我颇感意外，因为现在4K的片源还不是很多，电视直播的信号甚至离1080p也都差的远。但是作为一个追求极致视觉体验的人，看到电视行业能够继续发展也是很欣慰的。现在互联网电视也是蓬勃发展，某米电视在某东上80万+的评论也充分的证明了这一点。原本我准备直接在某东上直接购买这一款畅销的电视，但是我媳妇是个细心的人，她还是想要去线下的电视卖场去看看。所以我们暂时没买，这一步的操作也为我们节省了几百块的运费。在我们看了几家不同品牌的4K电视之后，发现了一些隐藏在4K电视中的猫腻。要搞..." }, { "title": "iOS音视频的那些事儿（一）：数据的采集和编码", "url": "/posts/audio-and-video-1/", "categories": "iOS", "tags": "AVFoundation, 音视频, YUV, H.265, PCM", "date": "2018-05-30 18:30:07 +0800", "snippet": "AVFoundation简介AVFoundation是苹果在iOS和OS X系统中用于处理基于时间的媒体数据的Objective-C框架. 供使用者来开发媒体类型的应用程序。如果只是进行简单的视频录制，使用UIKit中的UIImagePickerController就可以了；如果需要播放视频，使用AVKit框架也足够了。但是如果需要进行视频文件的处理等更灵活等操作，就需要使用到AVFoundation等底层的框架了。 CoreAudio : 处理所有音频事件.是由多个框架整合在一起的总称,为音频和MIDI内容的录制,播放和处理提供相应接口.甚至可以针对音频信号进行完全控制,并通..." }, { "title": "深入理解HTTPS", "url": "/posts/https/", "categories": "iOS", "tags": "HTTPS, 加密, 证书, 中间人攻击", "date": "2017-12-06 06:18:12 +0800", "snippet": "HTTP为什么不安全HTTP协议传输的数据都是未经过加密处理的，也就是说客户端和服务端使用HTTP通信的中间环节都有可能会产生信息的泄漏。如何让HTTP更安全有人会说很简单，把数据加密一下不就行了。嗯，说起来很简单，但是具体怎么加密呢？对称加密还是非对称加密？我们现在有两种加密方式可以选择：对称加密和非对称加密。 对称加密是最快速、最简单的一种加密方式，加密（encryption）与解密（decryption）用的是同样的密钥（secret key）,这种方法在密码学中叫做对称加密算法。 非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。公..." }, { "title": "SSH协议工作过程", "url": "/posts/understanding-of-ssh/", "categories": "Mac", "tags": "SSH, TCP, 密钥", "date": "2017-11-30 08:29:40 +0800", "snippet": "说到SSH，我们很多人都用过，比如我们通过git提交代码到Github的时候需要先添加本机的public key到Github网站，使用SSH远程连接VPS来对服务器进行操作。但是SSH究竟是什么，它是如何工作的呢？定义SSH全称Secure Shell，是一个提供数据通信安全、远程登录、远程指令执行等功能的安全网络协议，由芬兰赫尔辛基大学研究员Tatu Ylönen，于1995年提出，其目的是用于替代非安全的Telnet、rsh、rexec等远程Shell协议。之后SSH发展了两个大版本SSH-1和SSH-2。SSH协议工作过程SSH工作过程可以分解成几个主要阶段： 连接建立 协议..." }, { "title": "解决Storyboard中设置的颜色和代码设置的颜色不一样的问题", "url": "/posts/xcode-device-rgb/", "categories": "iOS", "tags": "Storyboard, Device RGB", "date": "2017-06-29 22:15:35 +0800", "snippet": "最近发现在Storyboard中设置的颜色和用代码设置的颜色居然不一样，当时我就震惊了！更让人震惊的是搞了这么多年iOS开发，居然现在才发现！惭愧啊。。。网上查了一下才知道原来Xcode里的色彩选择器默认的Color Profile是Generic RGB，如下图所示：把它改为Device RGB就可以解决这个问题了。" }, { "title": "利用Pinch和Pan手势实现UIView的缩放和拖拽", "url": "/posts/custom-scalable-view/", "categories": "iOS", "tags": "手势", "date": "2017-06-21 22:25:01 +0800", "snippet": "先来看下我们要实现的效果：其实这个效果UIScrollView已经自带了，但是某些情况下由于某些原因我们可能不能或者不想使用UIScrollView，那么我们就得自己实现这个效果。如果要单独用Pinch手势实现缩放或者用Pan手势实现拖拽，这个比较简单，直接贴代码：// 利用Pinch手势实现缩放func didPinch(_ pinch: UIPinchGestureRecognizer) { if pinch.state != .changed { return } let scale = pinch.scale let scaleTransfo..." }, { "title": "获取App Store下载的Xcode安装包", "url": "/posts/appstore-download-path/", "categories": "Mac", "tags": "App Store, Xcode", "date": "2017-06-09 19:49:58 +0800", "snippet": "通过 App Store 下载安装 Xcode 的时候可能会遇到各种奇葩的事情。这不，我刚才就摊上事了：用公司的渣网络辛辛苦苦下载两个多小时眼看开始安装了结果弹框提示我说空间不足无法继续安装。既然空间不足咱就清理一下呗，清理完了之后想要继续安装发现没有办法重新开始安装，App Store 里的按钮显示 发生错误，/Applications 文件加下的 Xcode.appdownload 文件双击也没有任何反应，真是哔了狗了！如果是下载还在进行，我们就可以根据这篇文章 所说的方法通过在活动监视器中查看进程 storedownloadd 打开的文件和端口中找到安装包的路径。但是我已经下载完了..." }, { "title": "制作服务端推送时使用的.pem证书", "url": "/posts/apns-certificates/", "categories": "iOS", "tags": "APNS, 证书", "date": "2017-06-02 01:45:41 +0800", "snippet": "服务端要给移动端发送推送消息就需要用到推送证书，但是服务端通常需要的证书 .pem 格式的，并不是我们从Apple的开发者中心下载到的 .cer 格式的文件，所以我们需要对其做一个转换。申请推送证书的过程我就不赘述了，这里假设你已经申请好了开发环境和生产环境的推送证书并下载导入到 Mac 钥匙串当中。下面我们开始转换，这里我以开发环境为例，生产环境同理： 从钥匙串中分别导出 Apple Development iOS Push Serives 证书和私钥为 cer.p12 和 key.p12（导出的时候会提示输入密码，可以随便设置一个） 使用 openssl 将 cer...." }, { "title": "嵌套UIScrollView滑动手势冲突的解决", "url": "/posts/nested-scrollview-scrolling-conflit/", "categories": "iOS", "tags": "UIScrollView, 手势", "date": "2017-05-28 18:55:23 +0800", "snippet": "问题最近有有朋友在Github上提出issue说 KSPhotoBrowser 在图片长度超出屏幕大小多时候没有办法通过拖拽返回。其实这个问题从我开始开发的时候就存在，感觉影响不是很大就一直拖着没解决。既然有人提出来了，那看来是必须得解决一下了。。。第一张图就是正常的拖拽返回，第二张有问题。解决要解决这个问题我们不得不说下 KSPhotoBrowser 的布局结构，先来看一张图：如上图所示，一个父 UIScrollView 里面添加了多个子 UIScrollView，每个子 UIScrollView 里包含一个 UIImageView 来显示图片，可以通过左右滑动父 UIScrollVi..." }, { "title": "Xcode多Target下本地化App名称", "url": "/posts/multi-target-localization/", "categories": "", "tags": "本地化", "date": "2017-05-25 20:43:00 +0800", "snippet": "Target可能很多人都会有开发多个相似的App的需求，这些相似的App可能也就是名称、BundleID、证书配置不同，其他的功能都基本一样。对于这种情况的处理，一种比较笨的办法就是手动修改 Info.plist 文件中相应的内容，打包完了之后再次修改再打包。这种方法如果只是搞一次也不会麻烦很多，但是如果多搞几次，谁都会觉得烦，况且在修改的过程中还有可能会出错。那有没有什么更好的办法呢？答案是：使用 Target。那么什么是 Target 呢？简单点说，一个 Target 描述了一个产品的属性并且包含了产品所需要的一系列文件。而一个 Project 中就包含多是一个或者多个产品所需要的文..." }, { "title": "检测iOS设备是否连接VPN", "url": "/posts/check-vpn-connectivity/", "categories": "iOS", "tags": "VPN", "date": "2017-05-24 21:42:39 +0800", "snippet": "前言（废话）最近接到一个限制我司国内版的产品在国外的使用App的需求，其实也就是让这种“水货”的产品在国外无法连接我们的App。为了达到这个目的，首先需要从产品中获取它的序列号来判断它是否属于国内版，然后根据手机的定位判断是否在国外，如果两个条件同时满足就断开连接。为了判断手机的定位是否在国外有以下两种方法： 根据手机的GPS定位坐标反地理编码获取国家代码判断是否是CN。 后台接口根据手机的IP来判断是否在国外。这两种方式都有缺陷，第一种可以通过模拟定位到国内的方式来避开，第二种可以通过连接服务器在国内的VPN来避开。上面提这需求的时候也没说要100%封死，况且一般人也不一定会想到这..." }, { "title": "让Mac终端自动补全忽略大小写", "url": "/posts/terminal-autocomplete/", "categories": "Mac", "tags": "Mac, 终端", "date": "2017-05-20 19:55:33 +0800", "snippet": "Mac自带的 Terminal.app 已经有自动补全功能，但是需要区分大小写。只需要在用户目录下修改 .inputrc 文件的配置就可以让它忽略大小写。具体操作如下：$ vi ~/.inputrc然后在里面添加下面的内容：set completion-ignore-case onset show-all-if-ambiguous onTAB: menu-complete保存后重新打开终端就可以使用 Tab 键愉快的使用了。" }, { "title": "使用Trunk发布开源库到Cocoapods", "url": "/posts/publish-to-cocoapods/", "categories": "iOS", "tags": "Cocoapods, Trunk", "date": "2017-05-17 00:49:20 +0800", "snippet": "注册安装Cocoapods$ sudo gem install cocoapods$ pod setuppod setup 的过程就是把 Cocoapods/Specs 克隆到本地的过程，由于这个库包含了所有发布到Cocoapods的开源库的说明，现在已经有数百兆的大小了，而且由于某众所周知的原因，这个过程会比较慢，需要耐心等待。注册Trunk$ pod trunk register skx926@gmail.com &#39;Kyle Sun&#39; --description=&#39;iMac&#39; --verbose这个是我注册时用的命令，使用时需要把邮箱和名字以及描述修改..." }, { "title": "让你的Mac终端“漂亮”起来", "url": "/posts/colorful-terminal/", "categories": "Mac", "tags": "终端, Vim", "date": "2017-03-13 06:47:33 +0800", "snippet": "Mac自带的终端默认的配色看起来有些单调，如何让它变的“漂亮”一些呢？这里我们以Tomorrow配色方案为例来进行设置。首先我们使用下面的命令来从Github上克隆Tomorrow项目$ git clone https://github.com/chriskempson/tomorrow-theme.git窗口进入刚才下载的项目的文件夹中的OS X Terminal文件夹，然后双击运行Tomorrow Night.terminal即可导入Tomorrow Night主题到终端。然后我们在终端的Preferences中的Profiles选项卡中选择Tomorrow Night并将它设置为默..." }, { "title": "GPS坐标纠偏和加偏", "url": "/posts/gps-correction/", "categories": "iOS", "tags": "GPS, 火星坐标", "date": "2017-03-04 18:07:13 +0800", "snippet": "做过iOS地图开发的同学都会遇到同一个问题–坐标偏移，简而言之就是你拿到的GPS坐标显示在地图上的时候并不会像你想象的那样显示在正确的位置，通常会有一公里左右的偏移。这是为什么呢？为何会有偏移？天朝测绘局以国家安全为由，用法律的形式对所有在天朝发型的地图类产品加了强制性规范，要求所有地图类产品都必须使用国家测绘局的一种加偏算法，对真实的GPS坐标（WGS-84）进行加偏处理。因此国内所有商用地图的坐标都是偏移的，这种加偏后的坐标就叫做火星坐标（GCJ-02）。国内的高德地图、搜狗地图、苹果地图、谷歌地图等都使用的是火星坐标（GCJ-02），奇葩的是百度在天朝测绘局要求的加密的基础之上又做..." }, { "title": "从指针说起", "url": "/posts/pointer-and-reference/", "categories": "iOS", "tags": "指针, 引用", "date": "2017-03-03 23:04:26 +0800", "snippet": "指针作为一个使用Objective-C的iOS开发者，指针对很多人来说却是最熟悉的陌生人–虽然每天都在用，但是却对它了解的不是很多。那么指针到底是什么呢？ 指针即指针变量，是一个存储变量内存地址的变量。这句话可能有点绕，我们举个例子来说一下：int a = 0;int *p = &amp;amp;a;上面的代码首先声明了一个int类型的变量a，它的值为0。然后又声明了一个指针类型的变量p，p这个变量存储的值就是a变量的内存地址。C++中的引用 引用是变量的别名。我们同样举个例子来说一下：int a = 0;int &amp;amp;b = a;首先声明了一个int类型的变量a，它的值..." }, { "title": "为Git设置代理", "url": "/posts/git-proxy/", "categories": "Mac", "tags": "代理, Git", "date": "2017-01-16 07:18:49 +0800", "snippet": "有人说中国大部分程序员的工作其实就是Copy from Github。当然，这句话有一些戏谑的成分，但是也能从中看出Github对一个程序员对重要性。Github作为全球最大的程序员交友平台，他服务质量肯定是毋庸置疑的。但是由于某些众所周知的原因，Github在天朝访问起来很慢，有时候甚至访问不了。这种情况下从Github上clone或者push代码上去就会很困难，为了能够稳定的访问Github我们就需要给Git服务设置代理。假设你现在已经有了一个本地端口号为1080的socks5代理服务器。我们来为Git设置一下http协议代理。全局代理$ git config --global ht..." }, { "title": "打造一台你的专属黑苹果", "url": "/posts/make-your-own-hackintosh/", "categories": "Mac", "tags": "黑苹果", "date": "2016-11-29 07:22:06 +0800", "snippet": "要打造一台你的专属黑苹果需要经过以下四个大的步骤： 配件购买 组装机器 安装系统 安装驱动1.配件购买对于Mac的兼容配件的购买可以查看tonymacx86的Buyer’s Guide，里面已经很详细的列出了很多推荐的配件和购买的链接。美中不足的是里面给出的链接都是国外的网站，不支持国内的邮寄地址。国内要想买就得通过海淘过程比较繁琐，有些转运公司也不支持电脑配件的邮寄，邮寄的周期也比较长，一般都得半个月。我自己以前没有海淘过东西，所以不推荐，当然以前如果有过海淘经历的朋友可以根据自己的情况来定。我个人推荐京东和天猫，京东相对来说更加正规而且送货快（这个很重要）。tonymac上列..." }, { "title": "再战黑苹果", "url": "/posts/hackintosh-again/", "categories": "Mac", "tags": "黑苹果", "date": "2016-11-27 09:14:12 +0800", "snippet": "2012年初，当我和宿舍的小伙伴们决定要做iOS开发的时候我们刚到大二第二学期，还用的是普通的PC。那时候没什么钱，每个月都省吃俭用的，班级和社团的活动都不舍得去，生怕多花一点钱，更别说要买一台iPhone和Mac了。那个时候iPhone 4s才刚出，iPhone 4正如日中天，也许是虚荣心作祟，也许是学习欲望的驱使，我最终还是花了2000块买了一台二手的iPhone 4。iPhone有了，还差Mac，怎么办呢？其实我平时挺喜欢折腾电脑装系统，为啥一定要用苹果系统而不是直接把苹果系统装在PC上呢？网上一看，果然很多人都这么干，还又个特殊的名字—-黑苹果。一战黑苹果刚开始搞黑苹果的时候我们..." }, { "title": "浅谈字节序和字节对齐", "url": "/posts/byte-order/", "categories": "iOS", "tags": "字节序", "date": "2016-07-31 08:27:37 +0800", "snippet": "在做智能硬件App开发的过程中，手机端和蓝牙模块之间需要进行传输数据。蓝牙4.0低功耗模式数据传输速度很慢，以我们现在使用的蓝牙模块为例，传输速度大概只有大约1K/s，比起网络传输动辄几百K/s甚至上兆的速度真的是相差甚远。所以为了加快数据的传输速度唯一的办法就是减少要传输的数据的大小了。既然要减少数据量，那我们在网络请求中很常用的xml和json格式就不能用了。因为它里面有很多冗余的数据比如“{}[]”这一类的符号、字段的名称啊之类的信息。因此使用结构体作为数据的载体就是比较符合需求的方式了。结构体和NSData互转iOS的CoreBluetooth框架发送和接收数据都需要使用NSDa..." }, { "title": "忙碌的六月", "url": "/posts/busy-june/", "categories": "Life", "tags": "结婚", "date": "2016-07-02 11:25:37 +0800", "snippet": "转眼间已经7月了，新的一年又过去了一半。时间真的是如果流水一般，在不经意间快速的流逝。回想起刚刚过去的6月，怎一个忙字了得！婚纱照自从年初确定了婚期在8月之后也一直没考虑这方面的事情。到了5月底，突然意识到离婚礼只剩下两个多月的时间了。上网了解了一下，婚纱照从拍摄到制作好一系列的相册、相框之类的东西一般都需要45天以上。这一下子就紧张起来了，如果中途出点问题，岂不是来不及了？意识到时间的紧迫性之后就在周末和罗老师赶紧去看了几家婚纱摄影，最终决定在天长地久拍，拍摄时间定在6月10号端午节。以前经常在路边见到拍婚纱照的。印象最深的就是几年前的一个冬天和朋友在苏州街头逛的时候，看到一对新人在拍..." }, { "title": "搭建自己的Shadowsocks翻墙服务器", "url": "/posts/shadowsocks-server/", "categories": "GFW", "tags": "Shadowsocks, VPS", "date": "2016-02-05 01:40:35 +0800", "snippet": "其实现在网上已经有很多类似的文章了，这种教程对于大多数人来说可能只需要看一次就行了，但也有可能过一段时间服务器被墙了或者速度不行ping值太高需要重新在新的服务器上搭建。所以我在此把我搭建以及优化的过程纪录一下，以便不时之需。为什么要翻墙我已经想不起来我是什么时候开始翻墙了，其实我一开始翻墙就是为了多了解一些关于我党的黑历史，希望上Twitter、facebook、Google、Youtube能发现一些普通人所不知道的事情。一开始确实如我所愿，但是知道这些事情并不能改变什么，渐渐的对这些事情失去了兴趣。后来随着技术的学习，对国外的产品和技术产生了一定的崇拜，尤其是Google，但是万恶的..." }, { "title": "利用Hexo和Github Pages搭建个人博客", "url": "/posts/build-hexo/", "categories": "Web", "tags": "Hexo, 博客, Github Pages", "date": "2016-01-27 07:29:28 +0800", "snippet": "简介 Github Pages可以理解为一个用户编写的、托管在Github上的静态网页，它提供了300M的免费空间。因为是Github出品，所以足够稳定，这对于一个博客来说足够了。 Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。配置Github Pages这里假设你已经安装了git，拥有了Github的帐号，配置好了ssh key。在Github上建立仓库登录Github之后点击首页的New repository创建一个新的仓库。 需要注意的是创建仓库的时候Repository name是..." }, { "title": "Mac如何生成Unix可执行文件", "url": "/posts/unix-executable/", "categories": "Mac", "tags": "Unix", "date": "2014-12-04 10:00:00 +0800", "snippet": "Yosemite升级10.10.2 prerelease 版本之后蛋疼的事情发生了，safari打不开github不说，就连google chrome也一打开就崩溃，升级到40的dev版本依旧崩溃，网上找了找，遇到同样问题的还挺多，有人已经提供了临时的解决办法将以下代码保存为patch.m文件#import &amp;lt;AppKit/AppKit.h&amp;gt;__attribute((constructor)) void Patch_10_10_2_entry(){ NSLog(@&quot;10.10.2 patch loaded&quot;);}@interface ..." }, { "title": "对extern的理解", "url": "/posts/understance-extern/", "categories": "iOS", "tags": "Extern", "date": "2014-12-04 09:46:00 +0800", "snippet": "很少用到extern这个关键字，对它的了解也只停留在大学课堂那一点印象：外部变量，与局部变量相对。最近项目中需要用到全局变量，使用全局变量大体上分为3种方式： 给AppDelegate增加property 使用单例模式，其实这个方法跟上一个方法比较类似，因为UIApplication的delegate也同样是一个单例，所以它的属性可以全局去访问 使用外部变量extern关键字重点说说第三种方法，iOS里面使用extern关键字一般是用来声明全局的变量，在.h文件中声明：extern NSString * const kLoginSuccessNotification;在.m文件中对..." }, { "title": "我为什么写博客", "url": "/posts/reason-of-writing-blog/", "categories": "Life", "tags": "博客", "date": "2014-11-15 06:30:00 +0800", "snippet": "博客的种类很多，有人喜欢写技术，有人喜欢写生活，有人记录自己的旅行…我为什么要写博客呢？一说到写博客我立马想到了写作文，一说的写作文我又立马想到了写日记，一说到写日记我突然又记起了记笔记。从小到大，写作一直是我的硬伤。虽然我很想写好日记，但写出来就像流水账；虽然我很想写好作文，但总是凑不够800字；虽然我很想做好笔记，但写出来就是一坨翔😂。此时我的脑海中突然回响起龚琳娜老师的神曲 伤不起，真的伤不起…虽然写作水平不高，但是，至少我还有逼格，我还有梦想！说来也怪，我这个写作文都凑不够800字的人看了那些大牛写的博客，也忍不住想自己试试。 一来可以陶冶陶冶情操。程序猿这个职业虽然..." }, { "title": "iOS图片圆角实现和性能优化", "url": "/posts/corner-radius/", "categories": "iOS", "tags": "圆角", "date": "2014-11-13 20:31:19 +0800", "snippet": "iOS的系统之中用了大量的圆角和圆形的图案，为了是我们的应用更加“接地气”，在iOS开发中我们也会不可避免的需要为自己的View添加圆角。我在开发中使用圆角有两种情况: 圆形的用户头像 给View或Button添加圆角这两种情况都可以设置View的CALayer属性的cornerRadius属性来产生圆角，使用方法很简单view.layer.cornerRadius = 5.0如果只需要一个带圆角的Button或者Label，这个方法就已经可以满足你的需求了，但是对于头像，只是给UIImageView设置cornerRadius属性只是让这个View产生了圆角，真正的Image在Vi..." } ]
